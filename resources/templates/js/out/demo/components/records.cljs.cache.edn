;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name demo.components.records, :imports nil, :requires {reagent.core reagent.core}, :uses {atom reagent.core}, :defs {object-view {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/components/records.cljs", :line 57, :column 7, :end-line 57, :end-column 18, :arglists (quote ([]))}, :name demo.components.records/object-view, :variadic false, :file "src/cljs/demo/components/records.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, array-view {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/components/records.cljs", :line 32, :column 7, :end-line 32, :end-column 17, :arglists (quote ([]))}, :name demo.components.records/array-view, :variadic false, :file "src/cljs/demo/components/records.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, sort-keys {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/components/records.cljs", :line 6, :column 7, :end-line 6, :end-column 16, :arglists (quote ([object]))}, :name demo.components.records/sort-keys, :variadic false, :file "src/cljs/demo/components/records.cljs", :end-column 16, :method-params ([object]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([object]))}, primitive? {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/components/records.cljs", :line 10, :column 7, :end-line 10, :end-column 17, :arglists (quote ([obj]))}, :name demo.components.records/primitive?, :variadic false, :file "src/cljs/demo/components/records.cljs", :end-column 17, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj]))}, primitive-view {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/components/records.cljs", :line 14, :column 7, :end-line 14, :end-column 21, :arglists (quote ([p needs-comma]))}, :name demo.components.records/primitive-view, :variadic false, :file "src/cljs/demo/components/records.cljs", :end-column 21, :method-params ([p needs-comma]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p needs-comma]))}, expander {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/components/records.cljs", :line 21, :column 7, :end-line 21, :end-column 15, :arglists (quote ([collapsed-atom]))}, :name demo.components.records/expander, :variadic false, :file "src/cljs/demo/components/records.cljs", :end-column 15, :method-params ([collapsed-atom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([collapsed-atom]))}, title-view {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/components/records.cljs", :line 25, :column 7, :end-line 25, :end-column 17, :arglists (quote ([title opener]))}, :name demo.components.records/title-view, :variadic false, :file "src/cljs/demo/components/records.cljs", :end-column 17, :method-params ([title opener]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([title opener]))}, key-value-view {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/components/records.cljs", :line 51, :column 7, :end-line 51, :end-column 21, :arglists (quote ([keyname value needs-comma]))}, :name demo.components.records/key-value-view, :variadic false, :file "src/cljs/demo/components/records.cljs", :end-column 21, :method-params ([keyname value needs-comma]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 3, :fn-var true, :arglists (quote ([keyname value needs-comma]))}, cmp {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/components/records.cljs", :line 80, :column 7, :end-line 80, :end-column 10, :arglists (quote ([object]))}, :name demo.components.records/cmp, :variadic false, :file "src/cljs/demo/components/records.cljs", :end-column 10, :method-params ([object]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 1, :fn-var true, :arglists (quote ([object]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:span.primitive-number :span.primitive-string :span.object-view-entry-value :div.array-view.expander-container :span.expander :else :div.records-list :on-click :div :div.object-view-entry :span.object-view-entry-key :div.object-view.expander-container :span :div.indent}, :order [:span :span.primitive-string :span.primitive-number :span.expander :on-click :span.object-view-entry-key :div.array-view.expander-container :div.indent :div :span.object-view-entry-value :div.object-view.expander-container :div.object-view-entry :else :div.records-list]}, :doc nil}