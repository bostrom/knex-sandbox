;; Analyzed by ClojureScript 0.0-3308
{:name demo.create-db, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {pasync cljs-promises.async, cljs-promises.async cljs-promises.async}, :imports nil, :defs {knex {:name demo.create-db/knex, :file "src/cljs/demo/create_db.cljs", :line 4, :column 1, :end-line 4, :end-column 10, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/create_db.cljs", :line 4, :column 6, :end-line 4, :end-column 10}}, schema {:name demo.create-db/schema, :file "src/cljs/demo/create_db.cljs", :line 5, :column 1, :end-line 5, :end-column 12, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/create_db.cljs", :line 5, :column 6, :end-line 5, :end-column 12}}, id {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/create_db.cljs", :line 8, :column 8, :end-line 8, :end-column 10, :private true, :arglists (quote ([table]))}, :private true, :name demo.create-db/id, :variadic false, :file "src/cljs/demo/create_db.cljs", :end-column 10, :method-params ([table]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([table]))}, create-authors-table {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/create_db.cljs", :line 11, :column 8, :end-line 11, :end-column 28, :private true, :arglists (quote ([table]))}, :private true, :name demo.create-db/create-authors-table, :variadic false, :file "src/cljs/demo/create_db.cljs", :end-column 28, :method-params ([table]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([table]))}, create-books-table {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/create_db.cljs", :line 16, :column 8, :end-line 16, :end-column 26, :private true, :arglists (quote ([table]))}, :private true, :name demo.create-db/create-books-table, :variadic false, :file "src/cljs/demo/create_db.cljs", :end-column 26, :method-params ([table]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([table]))}, create-subjects-table {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/create_db.cljs", :line 22, :column 8, :end-line 22, :end-column 29, :private true, :arglists (quote ([table]))}, :private true, :name demo.create-db/create-subjects-table, :variadic false, :file "src/cljs/demo/create_db.cljs", :end-column 29, :method-params ([table]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([table]))}, create {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/create_db.cljs", :line 26, :column 7, :end-line 26, :end-column 13, :arglists (quote ([]))}, :name demo.create-db/create, :variadic false, :file "src/cljs/demo/create_db.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}}