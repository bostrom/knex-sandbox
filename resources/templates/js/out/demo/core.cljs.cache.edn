;; Analyzed by ClojureScript 0.0-3308
{:use-macros {go cljs.core.async.macros, <? cljs-promises.async}, :excludes #{}, :name demo.core, :imports nil, :requires {reagent reagent.core, pasync cljs-promises.async, demo.components.db-schema demo.components.db-schema, create-db demo.create-db, reagent.core reagent.core, cljs-promises.async cljs-promises.async, populate-db demo.populate-db, demo.create-db demo.create-db, demo.components.sandbox demo.components.sandbox, demo.populate-db demo.populate-db, sandbox demo.components.sandbox, db-schema demo.components.db-schema}, :uses nil, :defs {has-index-db {:name demo.core/has-index-db, :file "src/cljs/demo/core.cljs", :line 13, :column 1, :end-line 13, :end-column 18, :meta {:file "/Users/matt/dev/knexSandbox/src/cljs/demo/core.cljs", :line 13, :column 6, :end-line 13, :end-column 18}}, no-index-db-warning {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexSandbox/src/cljs/demo/core.cljs", :line 15, :column 7, :end-line 15, :end-column 26, :arglists (quote ([]))}, :name demo.core/no-index-db-warning, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, container {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexSandbox/src/cljs/demo/core.cljs", :line 21, :column 7, :end-line 21, :end-column 16, :arglists (quote ([]))}, :name demo.core/container, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init! {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexSandbox/src/cljs/demo/core.cljs", :line 28, :column 7, :end-line 28, :end-column 12, :arglists (quote ([]))}, :name demo.core/init!, :variadic false, :file "src/cljs/demo/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, cljs-promises.async cljs-promises.async}, :cljs.analyzer/constants {:seen #{:div.center :div.alert.alert-danger :else :recur :div :h3 :p}, :order [:div.center :div.alert.alert-danger :h3 :p :div :recur :else]}, :doc nil}