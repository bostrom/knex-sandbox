;; Analyzed by ClojureScript 0.0-3308
{:name demo.populate-db, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses {knex demo.knex}, :requires {data demo.data, demo.data demo.data, demo.knex demo.knex, p cljs-promises.core, cljs-promises.core cljs-promises.core, pasync cljs-promises.async, cljs-promises.async cljs-promises.async}, :imports nil, :defs {populate-table {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/populate_db.cljs", :line 7, :column 8, :end-line 7, :end-column 22, :private true, :arglists (quote ([name data]))}, :private true, :name demo.populate-db/populate-table, :variadic false, :file "src/cljs/demo/populate_db.cljs", :end-column 22, :method-params ([name data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name data]))}, populate {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/src/cljs/demo/populate_db.cljs", :line 10, :column 7, :end-line 10, :end-column 15, :arglists (quote ([]))}, :name demo.populate-db/populate, :variadic false, :file "src/cljs/demo/populate_db.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}}