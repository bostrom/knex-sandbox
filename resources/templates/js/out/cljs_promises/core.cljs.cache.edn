;; Analyzed by ClojureScript 0.0-3308
{:name cljs-promises.core, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {cast-as-array {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/resources/templates/js/out/cljs_promises/core.cljs", :line 3, :column 8, :end-line 3, :end-column 21, :private true, :arglists (quote ([coll]))}, :private true, :name cljs-promises.core/cast-as-array, :variadic false, :file "resources/templates/js/out/cljs_promises/core.cljs", :end-column 21, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}, promise {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/resources/templates/js/out/cljs_promises/core.cljs", :line 12, :column 7, :end-line 12, :end-column 14, :arglists (quote ([resolver]))}, :name cljs-promises.core/promise, :variadic false, :file "resources/templates/js/out/cljs_promises/core.cljs", :end-column 14, :method-params ([resolver]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([resolver]))}, resolve {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/resources/templates/js/out/cljs_promises/core.cljs", :line 16, :column 7, :end-line 16, :end-column 14, :arglists (quote ([x]))}, :name cljs-promises.core/resolve, :variadic false, :file "resources/templates/js/out/cljs_promises/core.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, reject {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/resources/templates/js/out/cljs_promises/core.cljs", :line 20, :column 7, :end-line 20, :end-column 13, :arglists (quote ([x]))}, :name cljs-promises.core/reject, :variadic false, :file "resources/templates/js/out/cljs_promises/core.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, all {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/resources/templates/js/out/cljs_promises/core.cljs", :line 24, :column 7, :end-line 24, :end-column 10, :arglists (quote ([coll]))}, :name cljs-promises.core/all, :variadic false, :file "resources/templates/js/out/cljs_promises/core.cljs", :end-column 10, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}, race {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/resources/templates/js/out/cljs_promises/core.cljs", :line 28, :column 7, :end-line 28, :end-column 11, :arglists (quote ([coll]))}, :name cljs-promises.core/race, :variadic false, :file "resources/templates/js/out/cljs_promises/core.cljs", :end-column 11, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}, then {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/resources/templates/js/out/cljs_promises/core.cljs", :line 32, :column 7, :end-line 32, :end-column 11, :arglists (quote ([promise on-fulfilled] [promise on-fulfilled on-rejected])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([promise on-fulfilled] [promise on-fulfilled on-rejected]), :arglists ([promise on-fulfilled] [promise on-fulfilled on-rejected]), :arglists-meta (nil nil)}}, :name cljs-promises.core/then, :variadic false, :file "resources/templates/js/out/cljs_promises/core.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([promise on-fulfilled] [promise on-fulfilled on-rejected]), :arglists ([promise on-fulfilled] [promise on-fulfilled on-rejected]), :arglists-meta (nil nil)}, :method-params ([promise on-fulfilled] [promise on-fulfilled on-rejected]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 3, :fn-var true, :arglists ([promise on-fulfilled] [promise on-fulfilled on-rejected])}, catch {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/resources/templates/js/out/cljs_promises/core.cljs", :line 38, :column 7, :end-line 38, :end-column 12, :arglists (quote ([promise on-rejected]))}, :name cljs-promises.core/catch, :variadic false, :file "resources/templates/js/out/cljs_promises/core.cljs", :end-column 12, :method-params ([promise on-rejected]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([promise on-rejected]))}, timeout {:protocol-inline nil, :meta {:file "/Users/matt/dev/knexPlayground/resources/templates/js/out/cljs_promises/core.cljs", :line 44, :column 7, :end-line 44, :end-column 14, :arglists (quote ([ms]))}, :name cljs-promises.core/timeout, :variadic false, :file "resources/templates/js/out/cljs_promises/core.cljs", :end-column 14, :method-params ([ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ms]))}}}